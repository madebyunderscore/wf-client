function w({selector:e='[counter-element="number"]',defaultDuration:t=2e3}={}){const a=(r,o,c)=>{let s;const u=m=>1-Math.pow(1-m,4),i=m=>{s===void 0&&(s=m);const h=m-s,f=Math.min(h/c,1),g=Math.round(o*u(f));r.textContent=g.toString(),f<1&&requestAnimationFrame(i)};requestAnimationFrame(i)},n=new IntersectionObserver((r,o)=>{r.forEach(c=>{if(c.isIntersecting){const s=c.target,u=parseInt(s.textContent||"0",10),i=parseInt(s.getAttribute("duration")||t,10);a(s,u,i),o.unobserve(s)}})});document.querySelectorAll(e).forEach(r=>n.observe(r))}function p(){const e=new URLSearchParams(window.location.search),t={};if(["utm_source","utm_medium","utm_campaign","utm_term","utm_content"].forEach(n=>{e.has(n)&&(t[n]=e.get(n))}),Object.keys(t).length>0)try{sessionStorage.setItem("utmParams",JSON.stringify(t))}catch(n){console.warn("Failed to store UTM parameters:",n)}}function b(){try{const e=sessionStorage.getItem("utmParams");if(e){const t=JSON.parse(e),a=new URLSearchParams(t).toString();document.querySelectorAll("a").forEach(n=>{const r=new URL(n.href,window.location.origin);r.hostname===window.location.hostname&&(r.search+=(r.search?"&":"")+a,n.href=r.toString())})}}catch(e){console.warn("Failed to append UTM parameters to links:",e)}}function v(e="mf_iframe"){const t=document.getElementById(e);if(!t)return;const a=sessionStorage.getItem("utmParams");if(a){const n=JSON.parse(a),r=new URL(t.src);Object.entries(n).forEach(([o,c])=>{r.searchParams.set(o,c)}),t.src=r.toString()}}w();function S(){console.log("onReady fired. Document and all resources loaded."),p(),b(),v()}window.addEventListener("load",S);const l=new IntersectionObserver(e=>{e.forEach(t=>{t.isIntersecting&&(t.target.classList.add("in-view"),l.unobserve(t.target))})});document.querySelectorAll("section").forEach(e=>{l.observe(e)});const d=new IntersectionObserver(e=>{e.forEach(t=>{t.isIntersecting&&(t.target.classList.add("in-view"),d.unobserve(t.target))})});document.querySelectorAll("[data-reveal]").forEach(e=>{d.observe(e)});(function(){function e(t,a){document.querySelectorAll(t).forEach(r=>{try{const o=new URL(r.href);if(!o.hostname||o.hostname===window.location.hostname||o.searchParams.has("utm_source"))return;o.searchParams.append("utm_source","dokucom"),o.searchParams.append("utm_content",a),r.href=o.toString()}catch{console.warn("Invalid link skipped:",r.href)}})}e("header a[href], .navbar a[href]","header"),e("footer a[href], .footer a[href]","footer")})();
