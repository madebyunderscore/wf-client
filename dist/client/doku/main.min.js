function b({selector:e='[counter-element="number"]',defaultDuration:t=2e3}={}){const i=(n,r,s)=>{let o;const u=c=>1-Math.pow(1-c,4),a=c=>{o===void 0&&(o=c);const m=c-o,l=Math.min(m/s,1),v=Math.round(r*u(l));n.textContent=v.toString(),l<1&&requestAnimationFrame(a)};requestAnimationFrame(a)},f=new IntersectionObserver((n,r)=>{n.forEach(s=>{if(s.isIntersecting){const o=s.target,u=parseInt(o.textContent||"0",10),a=parseInt(o.getAttribute("duration")||t,10);i(o,u,a),r.unobserve(o)}})});document.querySelectorAll(e).forEach(n=>f.observe(n))}b();const h=new IntersectionObserver(e=>{e.forEach(t=>{t.isIntersecting&&(t.target.classList.add("in-view"),h.unobserve(t.target))})});document.querySelectorAll("section").forEach(e=>{h.observe(e)});const d=new IntersectionObserver(e=>{e.forEach(t=>{t.isIntersecting&&(t.target.classList.add("in-view"),d.unobserve(t.target))})});document.querySelectorAll("[data-reveal]").forEach(e=>{d.observe(e)});(function(){function e(t,i){document.querySelectorAll(t).forEach(n=>{try{const r=new URL(n.href);if(!r.hostname||r.hostname===window.location.hostname||r.searchParams.has("utm_source"))return;r.searchParams.append("utm_source","dokucom"),r.searchParams.append("utm_content",i),n.href=r.toString()}catch{console.warn("Invalid link skipped:",n.href)}})}e("header a[href], .navbar a[href]","header"),e("footer a[href], .footer a[href]","footer")})();
